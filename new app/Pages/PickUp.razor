@page "/pickUp"
@inject User user
@inject AssistService service
@inject NavigationManager navigationManager

<style>
    .about {
    margin: 70px;
    margin-top: 0;
}

.about__text {
    margin: 30px auto;
    padding: 40px;
    font-size: 24px;
    line-height: normal;
    color: white;
    background-color: #4D0099;
}

.title {
    margin: 70px 0 0 70px;
    font-size: 48px;
    font-weight: bold;
    color: #5B0CF9;
}

.form-box {
    max-width: 600px;
    margin: 40px auto;
    background-color: #A29BEF;
    padding: 30px 50px;
}

.box-label {
    font-size: 24px;
    color: #4C0099;
}

::deep .box-input {
    border-radius: 10px;
    font-size: 24px;
}

::deep .box-input::-webkit-outer-spin-button, ::deep  .box-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

::deep .box-input[type=number] {
    -moz-appearance: textfield;
}

.button {
    margin: auto;
    font-size: 24px;
    padding: 15px 25px;
    color: #4C0099;
    border: #4C0099 solid 1px;
    border-radius: 0;
}

.button-hint {
    color: #FE00B7;
    border: #FE00B7 solid 1px;
}

.hint {
    font-size: 16px;
    position: absolute;
    padding: 10px;
    max-width: 180px;
    background-color: #FE00B7;
    color: white;
    right: -220px;
}

.hint-bottom {
    bottom: 0;
}

.hint-button {
    width: 150px;
    bottom: 0;
    right: -200px;
    cursor: pointer;
}

.hint-top {
    top: 0;
}

.hint::before {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
}

.hint-bottom::before {
    bottom: 0;
    left: -40px;
    border-bottom: 20px solid #FE00B7;
    border-left: 40px solid transparent;
}

.hint-top::before {
    top: 0;
    left: -40px;
    border-top: 20px solid #FE00B7;
    border-left: 40px solid transparent;
}
</style>

<div class="container-fluid">

    <div class="title">Подбор всех комплектующих
        @if (func != null)
        {
            if (!aboutBlock && func.UserLevel == UserLevel.Beginner)
            {
                <button type="button" class="btn button button-hint" @onclick="ShowAboutBlock">Показать описание</button>
            }
            else if (!aboutBlock && func.UserLevel == UserLevel.Pro)
            {
                <button type="button" class="btn button button-hint" @onclick="ShowHelp">Показать помощь</button>
            }
        }
    </div>


    @if (aboutBlock)
    {
        <div class="about">
            <div class="row about__text">
                <div class="col-md-8">
                    В системе описаны компонующие 7 типов. К ним относятся центральный процессор, оперативная память,
                    хранилище данных, блок питания, материнская плата, системный блок и система
                    охлаждения. На основе вашего
                    буджета, подбирается подборка с наилучшими параметрами. Результат можно будет увидеть после того,
                    как вы введете денежный лимит и нажмете на кнопку.
                </div>
                <div class="col-md-4">
                    <img src="../img/pickUp.png" alt="" width="100%">
                </div>
            </div>
        </div>
    }

    <div class="form-box">
        <EditForm Model="@budget" OnValidSubmit="@Handle" class=" d-flex flex-column">

            <div class="mb-3">
                <label for="budget" class="form-label box-label">Бюджет</label>
                <div class="position-relative">
                    <InputNumber class="form-control box-input" min="1" id="budget" required @bind-Value="budget">1
                    </InputNumber>
                    @if (hints)
                    {
                        <div class="hint hint-bottom">
                            Укажите денежное ограничение, чтобы не выходить за рамки бюджета
                        </div>
                    }
                </div>
            </div>

            <div class="position-relative mx-auto">
                <button type="submit" class="btn button">Подобрать</button>
                @if (hints)
                {
                    <div class="hint hint-top">
                        Нажмите на кнопку после того, как заполните форму
                    </div>
                }
            </div>


        </EditForm>
    </div>
</div>

@code {
    private int budget;
    private bool aboutBlock;
    private bool hints;

    private AssistFunc func;

    private bool isFast = true;

    private async void Handle()
    {
        await service.IncreaseAssistFuncLevel(func, isFast);
        navigationManager.NavigateTo($"/pickUpResult/{budget}/1111111");
    }

    private void ShowHint() => hints = true;

    private void ShowAboutBlock() => aboutBlock = true;

    private async void ShowHelp()
    {
        aboutBlock = true;
        hints = true;
        isFast = false;
        await service.UpdateAssistFuncLevel(func, UserLevel.Beginner);
    }

    protected override async void OnAfterRender(bool isFirst)
    {
        if (isFirst)
        {
            func = service.GetAssistFunc(0);

            StateHasChanged();

            if (func.UserLevel == UserLevel.New)
            {
                aboutBlock = true;
                hints = true;
            }
            else if (func.UserLevel == UserLevel.Beginner)
            {
                await Task.Delay(8000);
                isFast = false;
                ShowHint();
            }

            StateHasChanged();
        }
    }
}